# Análise estática e lints para Flutter/Dart
# Baseado em flutter_lints + ajustes de qualidade/consistência para apps e packages.
include: package:flutter_lints/flutter.yaml

formatter:
  # Mantém vírgulas à direita onde fizer sentido (útil em diffs e formatação multi-linha)
  trailing_commas: preserve

analyzer:
  exclude:
    # Arquivos gerados
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gen.dart"
    - "**/*.gr.dart"
    - "**/*.config.dart"
    - "**/firebase_options.dart"
    - "lib/**.mocks.dart"
    - "build/**"
    - ".dart_tool/**"
    - "coverage/**"
    - "ios/Flutter/.symlinks/**"
    - "macos/Flutter/ephemeral/**"
    - "android/app/generated/**"
  errors:
    # Sane defaults (promove alguns avisos comuns para warning)
    dead_code: warning
    unused_import: warning
    unused_local_variable: warning
    invalid_use_of_visible_for_testing_member: warning
    # Em times que usam print apenas em debug, mantenha como warning. Para proibir de vez, mude para 'error'
    avoid_print: warning
    body_might_complete_normally_nullable: ignore
  plugins: 
    # Plugins adicionais que você pode querer ativar:
    # - pedantic: regras de estilo do Google
    # - lint: regras adicionais de linting
    # - dart_code_metrics: métricas avançadas de código (complexidade, duplicação, etc)
    # - flutter_coverage: para análise de cobertura de testes
    # - dart_dev: para tarefas de desenvolvimento e scripts
    - custom_lint


linter:
  rules:
    # ===== Estilo e consistência =====
    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    annotate_overrides: true
    prefer_single_quotes: true
    prefer_final_locals: true
    prefer_final_fields: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_const_constructors_in_immutables: true
    unnecessary_const: true
    unnecessary_late: true
    unnecessary_parenthesis: true
    unnecessary_await_in_return: true
    unnecessary_to_list_in_spreads: true
    avoid_redundant_argument_values: true
    avoid_init_to_null: true
    use_rethrow_when_possible: true
    require_trailing_commas: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    # Ordenação de imports e combinadores (ajuda o import-sort no editor)
    directives_ordering: true
    combinators_ordering: true

    # ===== Segurança de tipos e null-safety =====
    avoid_dynamic_calls: true
    avoid_types_as_parameter_names: true
    cast_nullable_to_non_nullable: true
    null_check_on_nullable_type_parameter: true
    tighten_type_of_initializing_formals: true
    always_require_non_null_named_parameters: true
    collection_methods_unrelated_type: true

    # ===== Boas práticas de API/Design =====
    avoid_positional_boolean_parameters: true
    avoid_returning_null_for_future: true
    avoid_void_async: true
    only_throw_errors: true
    use_super_parameters: true
    use_named_constants: true
    use_enums: true

    # ===== Imports e dependências =====
    depend_on_referenced_packages: true
    # Em monorepos ou libs compartilhadas, prefira imports por pacote para evitar paths relativos frágeis
    always_use_package_imports: true
    # (Se você prefere relativos dentro do mesmo pacote, desative a linha acima e ative a de baixo)
    # prefer_relative_imports: true

    # ===== Flutter específico =====
    use_key_in_widget_constructors: true
    prefer_const_declarations: true
    avoid_unnecessary_containers: true
    sized_box_for_whitespace: true
    sort_child_properties_last: true
    use_full_hex_values_for_flutter_colors: true
    flutter_style_todos: true

    # ===== Performance e limpeza =====
    avoid_unused_constructor_parameters: true
    prefer_interpolation_to_compose_strings: true
    prefer_if_elements_to_conditional_expressions: true
    no_runtimeType_toString: true

    # ===== Testes =====
    avoid_equals_and_hash_code_on_mutable_classes: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true

    # ===== Logs e debug =====
    # Se você usa package:logger ou um wrapper, impedir 'print' ajuda a manter padrão
    avoid_print: true

# Dicas:
# - Se o seu projeto tem muito widget stateful, considere ativar também:
#   - diagnostic_describe_all_properties: true
# - Se for um package público, vale subir o nível de severidade de 'public_member_api_docs' para true.
